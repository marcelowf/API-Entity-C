// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Trabalho;

#nullable disable

namespace TrabalhoFinalEntity.Migrations
{
    [DbContext(typeof(TrabalhoContext))]
    partial class TrabalhoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Trabalho.CheckOut", b =>
                {
                    b.Property<int>("CodCheckOut")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodCheckOut"));

                    b.Property<int>("CodCliente")
                        .HasColumnType("int");

                    b.Property<string>("PagamentoNotaFiscal")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<float>("ValorNotaFiscal")
                        .HasColumnType("real");

                    b.HasKey("CodCheckOut");

                    b.ToTable("CheckOuts");
                });

            modelBuilder.Entity("Trabalho.Checkin", b =>
                {
                    b.Property<int>("CodCheckin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodCheckin"));

                    b.Property<int>("CodCliente")
                        .HasColumnType("int");

                    b.Property<int>("PeriodoPermanecia")
                        .HasColumnType("int");

                    b.Property<string>("StatusCheckIn")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CodCheckin");

                    b.ToTable("Checkins");
                });

            modelBuilder.Entity("Trabalho.Cliente", b =>
                {
                    b.Property<int>("CodCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodCliente"));

                    b.Property<string>("EmailCliente")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NacionalidadeCliente")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NomeCliente")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CodCliente");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("Trabalho.ConsumoFrigobar", b =>
                {
                    b.Property<int>("CodConsumoFrigobar")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodConsumoFrigobar"));

                    b.Property<bool>("Assinado")
                        .HasColumnType("bit");

                    b.Property<int>("CodCliente")
                        .HasColumnType("int");

                    b.Property<int>("CodFrigobar")
                        .HasColumnType("int");

                    b.Property<int>("CodNotaFiscal")
                        .HasColumnType("int");

                    b.Property<string>("DescricaoConsumo")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<float>("ValorConsumo")
                        .HasColumnType("real");

                    b.HasKey("CodConsumoFrigobar");

                    b.ToTable("ConsumoFrigobars");
                });

            modelBuilder.Entity("Trabalho.ConsumoLavanderia", b =>
                {
                    b.Property<int>("CodConsumoLavanderia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodConsumoLavanderia"));

                    b.Property<bool>("Assinado")
                        .HasColumnType("bit");

                    b.Property<int>("CodCliente")
                        .HasColumnType("int");

                    b.Property<int>("CodLavanderia")
                        .HasColumnType("int");

                    b.Property<int>("CodNotaFiscal")
                        .HasColumnType("int");

                    b.Property<int>("QuantidadeServicos")
                        .HasColumnType("int");

                    b.Property<float>("ValorConsumo")
                        .HasColumnType("real");

                    b.HasKey("CodConsumoLavanderia");

                    b.ToTable("ConsumoLavanderias");
                });

            modelBuilder.Entity("Trabalho.ConsumoRestaurante", b =>
                {
                    b.Property<int>("CodConsumoRestaurante")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodConsumoRestaurante"));

                    b.Property<bool>("Assinado")
                        .HasColumnType("bit");

                    b.Property<int>("CodCliente")
                        .HasColumnType("int");

                    b.Property<int>("CodNotaFiscal")
                        .HasColumnType("int");

                    b.Property<int>("CodRestaurante")
                        .HasColumnType("int");

                    b.Property<string>("DescricaoConsumo")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<bool>("EntregaNoQuarto")
                        .HasColumnType("bit");

                    b.Property<float>("ValorConsumo")
                        .HasColumnType("real");

                    b.HasKey("CodConsumoRestaurante");

                    b.ToTable("ConsumoRestaurantes");
                });

            modelBuilder.Entity("Trabalho.ContatosCliente", b =>
                {
                    b.Property<int>("CodContato")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodContato"));

                    b.Property<int?>("ClienteCodCliente")
                        .HasColumnType("int");

                    b.Property<int>("CodCliente")
                        .HasColumnType("int");

                    b.Property<string>("EnderecoContato")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TelefoneContato")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CodContato");

                    b.HasIndex("ClienteCodCliente");

                    b.ToTable("ContatosClientes");
                });

            modelBuilder.Entity("Trabalho.Filial", b =>
                {
                    b.Property<int>("CodFilial")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodFilial"));

                    b.Property<string>("EnderecoFilial")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Estrelas")
                        .HasColumnType("int");

                    b.Property<int?>("HotelCodHotel")
                        .HasColumnType("int");

                    b.Property<string>("NomeFilial")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("NumQuartosEconomico")
                        .HasColumnType("int");

                    b.Property<int>("NumQuartosExecutivo")
                        .HasColumnType("int");

                    b.Property<int>("NumQuartosLuxo")
                        .HasColumnType("int");

                    b.HasKey("CodFilial");

                    b.HasIndex("HotelCodHotel");

                    b.ToTable("Filiais");
                });

            modelBuilder.Entity("Trabalho.Frigobar", b =>
                {
                    b.Property<int>("CodFrigobar")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodFrigobar"));

                    b.Property<string>("NomeFrigobar")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CodFrigobar");

                    b.ToTable("Frigobars");
                });

            modelBuilder.Entity("Trabalho.Funcionario", b =>
                {
                    b.Property<int>("CodFuncionario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodFuncionario"));

                    b.Property<string>("Cargo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TipoFuncionario")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CodFuncionario");

                    b.ToTable("Funcionarios");
                });

            modelBuilder.Entity("Trabalho.Hotel", b =>
                {
                    b.Property<int>("CodHotel")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodHotel"));

                    b.Property<string>("NomeHotel")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CodHotel");

                    b.ToTable("Hoteis");
                });

            modelBuilder.Entity("Trabalho.Lavanderia", b =>
                {
                    b.Property<int>("CodLavanderia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodLavanderia"));

                    b.Property<string>("NomeServico")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CodLavanderia");

                    b.ToTable("Lavanderias");
                });

            modelBuilder.Entity("Trabalho.Quarto", b =>
                {
                    b.Property<int>("CodQuarto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodQuarto"));

                    b.Property<string>("Adaptado")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("CapacidadeMaxima")
                        .HasColumnType("int");

                    b.Property<int>("CapacidadeOpcional")
                        .HasColumnType("int");

                    b.Property<int>("CodFilial")
                        .HasColumnType("int");

                    b.Property<int?>("FilialCodFilial")
                        .HasColumnType("int");

                    b.Property<string>("TipoQuarto")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<float>("ValorDiaria")
                        .HasColumnType("real");

                    b.HasKey("CodQuarto");

                    b.HasIndex("FilialCodFilial");

                    b.ToTable("Quartos");
                });

            modelBuilder.Entity("Trabalho.Reserva", b =>
                {
                    b.Property<int>("CodReserva")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodReserva"));

                    b.Property<DateTime>("DtReserva")
                        .HasColumnType("datetime2");

                    b.Property<string>("StatusReserva")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TipoReserva")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CodReserva");

                    b.ToTable("Reservas");
                });

            modelBuilder.Entity("Trabalho.Restaurante", b =>
                {
                    b.Property<int>("CodRestaurante")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodRestaurante"));

                    b.Property<string>("NomeRestaurante")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CodRestaurante");

                    b.ToTable("Restaurantes");
                });

            modelBuilder.Entity("Trabalho.ContatosCliente", b =>
                {
                    b.HasOne("Trabalho.Cliente", null)
                        .WithMany("Contatos")
                        .HasForeignKey("ClienteCodCliente");
                });

            modelBuilder.Entity("Trabalho.Filial", b =>
                {
                    b.HasOne("Trabalho.Hotel", "Hotel")
                        .WithMany("Filiais")
                        .HasForeignKey("HotelCodHotel");

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("Trabalho.Quarto", b =>
                {
                    b.HasOne("Trabalho.Filial", null)
                        .WithMany("Quartos")
                        .HasForeignKey("FilialCodFilial");
                });

            modelBuilder.Entity("Trabalho.Cliente", b =>
                {
                    b.Navigation("Contatos");
                });

            modelBuilder.Entity("Trabalho.Filial", b =>
                {
                    b.Navigation("Quartos");
                });

            modelBuilder.Entity("Trabalho.Hotel", b =>
                {
                    b.Navigation("Filiais");
                });
#pragma warning restore 612, 618
        }
    }
}
